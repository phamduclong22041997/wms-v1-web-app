# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    app_upload_dir: "."

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false        # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    # App\:
    #     resource: '../src/*'
    #     exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    # App\Controller\:
    #    resource: '../src/Controller'
    #    tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # generate_bundle:
    #     namespace: Ccicore\ApiBundle\Command\
    #     resource:  '../src/Ccicore/ApiBundle/Command'
    #     tags:      ['console.command']
    ovcore_queue:
        namespace: OVCore\QueueBundle\Command\
        resource:  '../src/OVCore/QueueBundle/Command'
        tags:      ['console.command']
    # ccicore2_shipmentqueue:
    #     namespace: Process\ShipmentBundle\Command\
    #     resource:  '../src/Process/ShipmentBundle/Command'
    #     tags:      ['console.command']
    # ccicore2_shipmentinstant_queue:
    #     namespace: Process\ShipmentBundle\Command\
    #     resource:  '../src/Process/ShipmentBundle/Command'
    #     tags:      ['console.command']
    #my.twig.extension:
    #    class: Smproc4\TemplateBundle\Extension\Smproc4TwigExtension
    #    tags: ['twig.extension']
    #smproc4.templatebundle.twig_database_loader:
    #    class: Smproc4\TemplateBundle\Twig\TwigDatabaseLoader
    #    tags: ['twig.loader']
    #smproc4.templatebundle.pdf_twig_database_loader:
    #    class: Smproc4\TemplateBundle\Twig\PdfTwigDatabaseLoader
    #    tags: ['twig.loader']
    #smproc4.templatebundle.twig_chain_loader:
    #   class: Twig_Loader_Chain
    #   calls:
    #       - [ addLoader, ["@twig.loader"] ]
    #       - [ addLoader, ["@smproc4.templatebundle.twig_database_loader"] ]
    #        - [ addLoader, ["@smproc4.templatebundle.pdf_twig_database_loader"] ]
    
    # Smproc4\CciBundle\Controller\RecvBatchController:
    #     arguments:
    #         $css_to_inline_email_converter: '@css_to_inline_email_converter'

# System's services
# knp_snappy:
#     pdf:
#         enabled: true
#         binary:  /usr/bin/wkhtmltopdf
#         # binary: "\"C:/Program Files/wkhtmltopdf/bin/wkhtmltopdf.exe\""
#         options: []
#     image:
#          enabled:    true
#          binary:     /usr/bin/wkhtmltoimage
#          options:    []

# nelmio_api_doc:
#     documentation:
#             info:
#                 title: SPIDER 2 API
#                 description: ""
#                 version: 1.8.0
#     models: { use_jms: false }
#     routes:
#         path_patterns: # an array of regexps
#             - /cciapi